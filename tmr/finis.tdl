;;; -*- Mode: tdl; Coding: utf-8; -*-

;;;
;;; Copyright (c) 2009 -- 2012 Stephan Oepen (oe@ifi.uio.no); 
;;; Copyright (c) 2012 -- 2013 Francis Bond (bond@ieee.org); 
;;; see `LICENSE' for conditions.
;;;


;;
;; on all tokens that we expect to activate named entries, make the +CARG
;; value reflect the orthography.
;;
generic_name_tmr := token_mapping_rule &  
[ +INPUT < [ +FORM #form,
             +TRAIT #trait & generic_trait, +CLASS #class & proper_ne, 
             +PRED #pred & named_rel, 
             +CARG #carg, 
             +ID #id, +FROM #from, +TO #to,
             +POS #pos & [ +TAGS < string > ] ] >,
  +OUTPUT < [ +FORM #form,
              +TRAIT #trait, +CLASS #class,
              +PRED #pred,
              +CARG #carg,
              +ID #id, +FROM #from, +TO #to,
              +POS #pos ] >,
  +POSITION "O1@I1",
  +CONTEXT < > ].

;;
;; on all tokens that we expect to activate generic entries, make the +PRED
;; value reflect the orthography and PoS tag.
;;
;; fix me: only nouns so far
;; 
generic_sahen_tmr := token_mapping_rule &  
[ +INPUT < [ +FORM #form,
             +TRAIT #trait & generic_trait, +CLASS #class & non_ne, 
             +PRED anti_string, +CARG #carg & ^(.+)$,
             +ID #id, +FROM #from, +TO #to,
             +POS #pos & [ +TAGS < ^(名詞-サ変接続.*)$ > ] ] >,
  +OUTPUT < [ +FORM #form,
              +TRAIT #trait, +CLASS #class,
              +PRED 
              "_${lc(I1:+CARG:1)}_s_unknown_rel",
              +CARG #carg,
              +ID #id, +FROM #from, +TO #to,
              +POS #pos ] >,
  +POSITION "O1@I1",
  +CONTEXT < > ].

generic_noun_tmr := token_mapping_rule &  
[ +INPUT < [ +FORM #form,
             +TRAIT #trait & generic_trait, +CLASS #class & non_ne, 
             +PRED anti_string, +CARG #carg & ^(.+)$,
             +ID #id, +FROM #from, +TO #to,
             +POS #pos & [ +TAGS < ^(名詞.*)$ > ] ] >,
  +OUTPUT < [ +FORM #form,
              +TRAIT #trait, +CLASS #class,
              +PRED 
              "_${lc(I1:+CARG:1)}_n_unknown_rel",
              +CARG #carg,
              +ID #id, +FROM #from, +TO #to,
              +POS #pos ] >,
  +POSITION "O1@I1",
  +CONTEXT < > ].

generic_pred_tmr := token_mapping_rule &  
[ +INPUT < [ +FORM #form,
             +TRAIT #trait & generic_trait, +CLASS #class & non_ne, 
             +PRED anti_string, +CARG #carg & ^(.+)$,
             +ID #id, +FROM #from, +TO #to,
             +POS #pos & [ +TAGS < ^(.*)$ > ] ] >,
  +OUTPUT < [ +FORM #form,
              +TRAIT #trait, +CLASS #class,
              +PRED 
              "_${lc(I1:+CARG:1)}_u_unknown:${I1:+POS.+TAGS.FIRST:1}_rel",
              +CARG #carg,
              +ID #id, +FROM #from, +TO #to,
              +POS #pos ] >,
  +POSITION "O1@I1",
  +CONTEXT < > ].


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; finally, make all non-generic tokens lower case (for lexical look-up).  as
;;; a side effect, the rule may also end up `grounding' very underspecified
;;; tokens (which should not exist, at this point, in principle): if +TRAIT,
;;; +CLASS, and +POS were all unspecific, we end up defaulting their values to
;;; a token that can only activate native lexical entries.
;;;
;;; also, apply sensible defaults for +TRAIT and +CLASS individually, and make
;;; sure there are no genuine duplicates among tokens in the same cell.
;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; downcase_tmr := one_one_form_tmt &
; [ +INPUT < [ +FORM ^(.*[[:upper:]].*)$, 
;              +TRAIT native_trait, +CLASS non_ne, +POS null_pos ] > ,
;   +OUTPUT < [ +FORM "${lc(I1:+FORM:1)}" ] > ].

#|
default_trait_tmr := one_one_tmt &
[ +INPUT < [ +FORM #form, +TRAIT anti_trait,
             +CLASS #class, +PRED #pred, +CARG #carg, +POS #tnt  ] >,
  +OUTPUT < [ +FORM #form, +TRAIT generic_trait, 
              +CLASS #class, +PRED #pred, +CARG #carg, +POS #tnt ] > ].
|#

default_class_tmr := one_one_tmt &
[ +INPUT < [ +FORM #form, +TRAIT #trait, +CLASS no_class,
             +PRED #pred, +CARG #carg, +POS #tnt ] >,
  +OUTPUT < [ +FORM #form, +TRAIT #trait, +CLASS non_ne,
              +PRED #pred, +CARG #carg, +POS #tnt ] >,
  +CONTEXT < > ].


;;
;; _fix_me_
;; as a catch-all rule, ditch tokens (in the same cell) that can be unified.
;; the chart mapping machinery aims to protect us against the introduction of
;; equivalent tokens (i.e. it will not generate new +OUTPUT tokens for which
;; equivalent items are in the chart already), hence it is most likely we will
;; end up purging tokens that stand in a genuine subsumption relation (unless
;; there were genuine duplicates in the input already).  but we have no control
;; over which of the two tokens will be preserved in the rule below; a classic
;; expectation might rather be to keep the most general token in the chart.  to
;; accomplish this, one would need a new +POSITION operator, e.g. "C1[I1", or
;; maybe even the actual UniCode glyph for subsumption.         (20-aug-10; oe)
;; 
uniq_tmr := token_mapping_rule &
[ +CONTEXT < #token >,
  +INPUT < #token >,
  +OUTPUT < >,
  +POSITION "I1@C1" ].

