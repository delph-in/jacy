;;; -*- Mode: TDL; Package: DISCO -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;        file: %Z% %M%
;;;      module:
;;;     version: %I%
;;;  written by: Melanie Siegel
;;; last update: %G% --- %U%
;;;  updated by: 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; author            | date        | modification
;;; ------------------|-------------|------------------------------------------
;;;Melanie Siegel(MS) |             |Emily Bender (ERB), Francis Bond (FCB), (TT)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



; Values



category :< sort.
p :< category.
n :< category.
adj :< category.
v :< category.
adv :< category.
card :< category.
interj :< category.
det :< category.
temp_mod :< category.
noun_mod :< category.
idiom :< category.
utt :< category.
turn :< category.
sap  :< category.
comp :< category.
prep :< category.
;card_mod :< category.
hes :< category.
punct :< category.
prefix :< category.
numcl :< category.

;aspect :< sort.
terminative :< aspect.
prospective :< aspect.
perfective :< aspect.
progressive :< aspect.
inceptive :< aspect.
perfect_progressive :< aspect.
modal :< aspect.

;tense :< sort.
tensed :< tense.

; (ERB 2001-12-13) For runon_s rule.

present-past-or-future := tensed.

present-or-past := present-past-or-future.
present :< present-or-past.
past :< present-or-past.

fut := present-past-or-future.
te :< tensed.
no_tense :< tense.


; (MS 2003-09-10) already contained in matrix.tdl
;mood :< sort.

uttmodus :< mood.

nonuttmodus :< mood.

passive :< mood.

nonpassive :< mood.

operative :< mood.

nonoperative :< mood.

imperative := nonuttmodus & nonpassive & nonoperative.

simple-imperative :< imperative.
polite-imperative :< imperative.

infinitive := nonuttmodus & nonpassive & nonoperative.

negative := operative & uttmodus.

conditional := operative & uttmodus.

voluntative := operative & uttmodus.


indicative := nonoperative & uttmodus & nonpassive.

consultative := nonoperative & uttmodus.

;potential := uttmodus & nonpassive.
potential := uttmodus & operative.

causative := uttmodus & nonpassive & operative.

pot-neg := negative & potential.
pot-pass := potential & passive-basic.
pot-caus := potential & causative.
pot-cond := potential & conditional.
pot-vol := potential & voluntative.
;pot-ind := potential & indicative.

neg-caus := negative & causative.
neg-pass := negative & passive-basic.
neg-vol := negative & voluntative.


vol-pass := voluntative & passive-basic.
vol-caus := voluntative & causative.


conditional-basic := conditional & nonpassive.
pass-cond := passive-basic & conditional.
neg-cond := conditional & negative.
caus-cond := causative & conditional.

passive-basic := passive & operative & uttmodus.

consult-caus := consultative & causative.

;sase-rare-tai
pot-caus-vol := pot-caus & vol-caus.

;sase-rare-nai
pot-neg-caus := pot-neg & pot-caus.

;sase-rare-taku-nai
caus-pot-vol-neg := pot-caus-vol & pot-neg-caus.

;taku-nakere-ba
vol-neg-cond := neg-vol & neg-cond.

smod  :< sort.

unmarked :< smod.
marked :< smod.

decl :< marked.
quest :< marked.
cond :< marked.
imp :< marked.

;satr :< sort.
;sat_or_opt :< satr.
;unsat :< satr.

;sat :< sat_or_opt.
;opt := sat_or_opt & unsat.
;obl :< unsat.

;unsat := sort.
;opt := unsat.
;obl := unsat.
 

;; some sorts for underspecifying quantifier relations CJ110797
; (MS 2003-07-09) not used any more.

;q_rel :< sort.

;true_q :< q_rel.
;udef :< q_rel.


;whq :< nondef.

;def :< udef.
;nondef :< udef.
;indef :< nondef.

;dem :< def.

;kono :< dem.
;sono :< dem.
;dono :< dem.
;ano :< dem.
;sonna :< dem.

;fuer Partikel:

ptype :< sort.

overt :< ptype.
empty :< ptype.
sentence-particle :< ptype.

topic :< overt.
nontop :< overt.

case :< nontop.
mod :< case.
temp-no :< case.
no-case :< case.
con :< case.
kara-case :< ni-or-kara.

; (ERB 2002-02-14) Complementizer to and postposition to should
; be distinguished.  For now, give complementizer to its own case
; value.  (Probably need more fundamental change to analysis -- 
; perhaps when we overhaul the clause analysis.)

to-comp := case.

ni-or-to :< case.
ni-or-kara :< case.
ga-or-wo :< case.
ni-or-ga :< case.
ga-or-coparg :< case.
wo-or-ni :< case.

ga := ga-or-wo & ni-or-ga & ga-or-coparg.
wo := ga-or-wo & wo-or-ni.
ni := ni-or-ga & ni-or-to & ni-or-kara & wo-or-ni.
to :< ni-or-to.
coparg :< ga-or-coparg.


postp-case :< nontop.
mo :< topic.
koso :< topic.
comma :< topic.

nattr  :< nontop.
parmod :< nontop.
de :< nontop.
wa  :< topic.
shika  :< topic.
dake :< topic.
nanka  :< postp-case.
e  :< postp-case.
sonota  :< postp-case.
tomo  :< postp-case.
nado  :< nontop.
made  :=  postp-case & topic.
kara  :< postp-case.
bakari  :< postp-case.
kurai  :< postp-case.
igai  :< postp-case.
toshite  :< postp-case.
yori  :< postp-case.
nitsuite :< postp-case.
nikaNshite :< postp-case.
nikakete :< postp-case.
niyotte :< postp-case.
sae :< postp-case.
tou :< postp-case.
zutsu :< postp-case.
toka :< postp-case.
kamo :< postp-case.
toiu :< nontop.
niokeru :< nontop.
notame :< topic.

; (TT 2003-09-04) for ijou, igai
ijou :< postp-case.
ika :< postp-case.


modify :< sort.
n-modified :< modify.
not-modified :<  modify.
modified :<  modify.

; (MS 2003-07-09) Not used any more?

;word-status :< sort.
;word :< word-status.
;stem :< word-status.


vref :< sort.
he :< vref.
sp :< vref.
sp_he :< vref.
top :< vref.
third :< vref.
thirdpl :< third.
firstpl :< sp.

vtype :< sort.
std-or-demon :< vtype.
std :< std-or-demon.
zero :< vtype.
demon :< std-or-demon.

morphbind :< sort.

morphbindtype :< morphbind.
nomorphbind :< morphbind.

vstem-morph :< morphbindtype.
cstem-morph :< morphbindtype.


v-or-c-stem-morph := vstem-morph & cstem-morph.

o-morph :< v-or-c-stem-morph.
u-morph :< v-or-c-stem-morph.
inf-morph :< v-or-c-stem-morph.
;cond-morph :< v-or-c-stem-morph.
i-or-t-or-a-morph :< v-or-c-stem-morph.
a-or-aa-morph :< i-or-t-or-a-morph.
a-morph :< a-or-aa-morph.

;;; (FCB 2003-08-12) type for "se zu" very irregular suru ending before zu
aa-morph :< a-or-aa-morph.

nd-morph :< cstem-morph.
mai-morph :< cstem-morph.
imp-morph :< cstem-morph.
cond-morph :< cstem-morph.

e-morph :< vstem-morph.

pass-morph :< morphbind.
pass-c-stem-morph := pass-morph & cstem-morph.
pass-v-stem-morph := pass-morph & vstem-morph.


ere-morph :< cond-morph.
cond-exceptional-morph :< cond-morph.

;(MS & FCB 2003-10-29) fixed the definition.

i-or-t-morph :< i-or-t-or-a-morph.
i-morph := i-or-t-morph & i-or-shortadj-morph.
t-morph :< i-or-t-morph.

i-or-shortadj-morph :< v-or-c-stem-morph.
shortadj-morph :< i-or-shortadj-morph.


stemtype :< sort.
regular-stem :< stemtype.
cons-stem :< regular-stem.
c-stem :< cons-stem. 
c2-stem :< cons-stem. 
v-stem :< regular-stem.

; (ERB 2002-01-22) To keep te (and possibly other tense
; endings) out of the i-adj-inflectional rule.

otherstem := stemtype.

irregular-stem  :< stemtype.

cop-stem :< irregular-stem.
da-stem :< cop-stem.
desu-stem  :< cop-stem.

adj-stem  :< irregular-stem.


kurusuru-stem  :< irregular-stem.


infinitive-stem :< stemtype.

nominal-stem  :< stemtype.
noun-stem :< nominal-stem.
poss-adv-stem :< nominal-stem.


pn :< sort.

person :< pn.
number :< pn.

; (ERB 2001-11-12) For the experiment I'm doing with -tai,
; I need a type one-or-two.

;one :< person.
one-or-two := person.
two-or-three := person.
one := one-or-two.
two := two-or-three & one-or-two.
three := two-or-three.

sg :< number.
pl :< number.

onesg := one & sg.
twosg := two & sg. 
threesg := three & sg.
onepl := one & pl.
twopl := two & pl.
threepl := three & pl.

gender :< sort.
andro :< gender.
fem :< andro.
masc :< andro.
neut :< andro.


posthead :< sort.
left :< posthead.
right :< posthead.
intersective :< posthead.
rels :< posthead.
coord :< posthead.

; (ERB 2002-01-24) To keep phrases produced by the conj-rule
; from being modified.  The multiple layers here allow for
; te-conjunction to either side of other kinds of conjucntion,
; while still forcing one order of combination within a kind
; of conjunction.

nucl :< sort.
fin_conj := nucl.
not_fin_conj := nucl.
te_conj := not_fin_conj.
nucl_bool := not_fin_conj.
nucl_plus := nucl_bool.
nucl_minus := nucl_bool.


