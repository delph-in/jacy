;;; -*- Mode: TDL; Package: DISCO -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;        file: %Z% %M%
;;;      module:
;;;     version: %I%
;;;  written by: Melanie Siegel
;;; last update: %G% --- %U%
;;;  updated by: 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; author            | date        | modification
;;; ------------------|-------------|------------------------------------------
;;;Melanie Siegel (MS)|             |Emily Bender (ERB), Francis Bond (FCB)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;LEXICAL TYPES -- verbs;;;;;;;;;;;

; (ERB 2001-10-17) Added subtypes of lexical_sign.  See notes in
; fundamentals.tdl.

; (ERB 2001-11-07) Certain entries for the (non-id) copula inherit
; from this type and shouldn't have interesting WLINKs.  So, v-lex
; is now just lexical_sign and some, but not all, of its subtypes
; are lexical_sign-word.

v-lex := lexical_sign & 
         [SYNSEM [LOCAL [CAT [HEAD verb_head,
                              VAL valence],
                         NUCL nucl_plus],
                  NON-LOCAL [AFFIX <! !>]]].



nonaux-lex := v-lex & 
           [SYNSEM [LOCAL.CAT.HEAD verb-noninfl_head-avm,
                    NON-LOCAL.QUE <! !>]].


generic-verb-lex := v-lex & lexical_sign-word &
                    [SYNSEM [LOCAL [CAT [HEAD verb_head-avm & [COP -,
                                                               AUX aux_minus,
                                                               VN -,
                                                               H-TENSE #tense,
                                                               MODUS #modus],
                                         VAL ga-wo_transitive &
                                              [SUBJ.FIRST #sbj & [LOCAL.CONT.HOOK.INDEX #sbjind],
					       COMPS #comps & [FIRST.LOCAL.CONT.HOOK.INDEX #objind]]],
                                    CONT simple-verb-sem-type &
                                        [HOOK.INDEX event & [E [TENSE #tense,
                                                           MOOD #modus]],
                                         RELS <!  #key !>,
                                         HCONS <! !>],
				    ARG-S < #sbj . #comps >],
			     LKEYS.KEYREL #key & arg12-ev-relation & arg12-relation & [ARG1 #sbjind,
									       ARG2 #objind],
                             NON-LOCAL.QUE <! !>],
                     INFLECTED +].


generic_verb_ru_infl-lex := generic-verb-lex &
                            [SYNSEM.LOCAL [CAT [HEAD [MOD < [LOCAL [CAT.HEAD noun_head,
								    BAR +],
							     MODIFIED.PERIPH -] >,
                                                      MODUS indicative,
                                                      H-TENSE present,
                                                      MARK < >,
                                                      J-SPEC < [LOCAL.CAT.HEAD noun_head] >,
                                                      FIN +,
                                                      FORMAL.AHON +]],
                                           BAR +],
                             J-NEEDS-AFFIX -].

generic_verb_i_infl-lex := generic-verb-lex &
                           [RMORPH-BIND-TYPE i-morph,
                            J-NEEDS-AFFIX +].


generic_verb_morphbind_infl-lex := generic-verb-lex &
                           [RMORPH-BIND-TYPE morphbind,
                            J-NEEDS-AFFIX +].


generic_verb_a_infl-lex := generic-verb-lex &
                           [RMORPH-BIND-TYPE a-morph,
                            J-NEEDS-AFFIX +].

generic_verb_t_infl-lex  := generic-verb-lex &
                           [RMORPH-BIND-TYPE t-morph,
                            J-NEEDS-AFFIX +].


generic_verb_cond_infl-lex  := generic-verb-lex &
                           [RMORPH-BIND-TYPE cond-morph,
                            J-NEEDS-AFFIX +].

generic_verb_o_infl-lex  := generic-verb-lex &
                           [RMORPH-BIND-TYPE o-morph,
                            J-NEEDS-AFFIX +].

generic_verb_vstem_infl-lex := generic-verb-lex &
                           [RMORPH-BIND-TYPE vstem-morph,
                            J-NEEDS-AFFIX +].

; (ERB 2002-01-14) [SMOD unmarked] to restrain utterance-rule2e.
; (FCB 2003-12-04) Hooked up ARG0

vn-lex  := nonaux-lex & lexical_sign-word & 
           [SYNSEM [LOCAL [CAT [HEAD vn_head-avm & [MAIN-PRD -,
                                                    SMOD unmarked,
						    KEYS.KEY #keypred]],
			   CONT simple-verb-sem-type & [HOOK [INDEX #ind,
							     LTOP #top],
						       RELS <! #key !>,
						       HCONS <! !>]],
		    LKEYS.KEYREL #key & [ ARG0 #ind,
					  PRED #keypred,
					  LBL #top]],
            INFLECTED +].

vn-sbj-comps-lex := vn-lex &
		    [SYNSEM.LOCAL [CAT.VAL [SUBJ.FIRST #sbj & [LOCAL.CONT.HOOK.INDEX #sbjind],
					    COMPS #comps],
				   CONT.HOOK.XARG #sbjind,
				   ARG-S < #sbj . #comps >]].

vn-trans1-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ga-wo_transitive &
				   [COMPS.FIRST.LOCAL.CONT [HOOK.INDEX #objind],
				    SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				    ARG2 #objind]]]].



vn-trans2-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ga-ni_transitive &
				   [COMPS.FIRST.LOCAL.CONT [HOOK.INDEX #objind],
				    SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				      ARG2 #objind]]]].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; (TK 07-07-04)
;; We have "v3(and v5a)-stem-lex" as "ga-to_transitive1" ,
;; and have "v5-stem-lex" as "ga-to_transitive2".
;; Despite this , we had used "vn-trans3-lex" as "ga-to_transitive2".
;; And we didn't have "ga-to_transitive1" in vn-lex.
;; I had felt confusing . 
;; So I redefined "vn-trans3-lex" as "ga-to_transitive1",and
;; defined "vn-trans5-lex" as "ga-to_transitive2".
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

vn-trans5-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ga-to_transitive2 &
				   [COMPS.FIRST.LOCAL.CONT [HOOK.INDEX #objind],
				    SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				    ARG2 #objind]]]].

; <type val="vn-trans5-lex">
; <name-ja>サ変ト他動詞
; <description>主格（「が」格）と目的格（「と」）格を取るサ変動詞。Jacy Valenceのga-to_transitive2
; を参照(http://wiki.delph-in.net/moin/JacyValence)。名詞として働くことができる他、
; 後にlightverbを伴って動詞として働くことができる。日本語では一般的に自動詞と呼ばれる。
; vn-trans3-lexとの違いは、文中に「と」格にあたるものが無くても出現する点である。
; <ex>兄 が 弟 と 喧嘩 する
; <ex>喧嘩 を やめる
; <nex>
; <todo>
; </type>
vn-trans5-lex := vn-trans5-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

vn-trans5-hhon-lex := vn-trans5-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].

vn-trans5-minus_shon-lex  := vn-trans5-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans5-hhon-minus_shon-lex  := vn-trans5-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans5-shon-lex := vn-trans5-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans5-hhon-shon-lex := vn-trans5-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


vn-trans3-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ga-to_transitive1 &
				   [COMPS.FIRST.LOCAL.CONT [HOOK.INDEX #objind],
				    SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				    ARG2 #objind]]]].

vn-trans8-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL sbj-narg_transitive &
				   [COMPS.FIRST.LOCAL.CONT [HOOK.INDEX #objind],
				    SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				      ARG2 #objind]],
		     NON-LOCAL.ROBUST +]].

vn-ditrans-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ditransitive &
                                      [COMPS [FIRST.LOCAL.CONT [HOOK.INDEX #objind],
					      REST.FIRST.LOCAL.CONT [HOOK.INDEX #obj2ind]],
				       SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				      ARG2 #objind,
                                      ARG3 #obj2ind]]]].

vn-intrans-super-lex := vn-lex &
            [SYNSEM [LOCAL [CAT.VAL intransitive &
                                      [SUBJ.FIRST #sbj & [LOCAL.CONT.HOOK.INDEX #sbjind]],
			    ARG-S < #sbj >,
			    CONT.HOOK.XARG #sbjind],
		     LKEYS [KEYREL.ARG1 #sbjind]]].



vn-ditrans-toni-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ga-wo-toni-ditransitive &
                                      [COMPS [FIRST.LOCAL.CONT [HOOK.INDEX #objind],
					      REST.FIRST.LOCAL.CONT [HOOK.INDEX #obj2ind]],
				       SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				      ARG2 #objind,
                                      ARG3 #obj2ind]]]].


; (ERB 2001-10-24) I need these verbs to have a special KEY type
; so that the k2y machinery can recognize them.  Currently, they
; are getting arg3_rel-super by type inference, and this isn't specific
; enough.


;vn-intransarg2-lex := vn-lex &
;            [SYNSEM.LOCAL [CAT.VAL intransitive &
;                                      [SUBJ.FIRST #sbj & [LOCAL.CONT.HOOK.INDEX #sbjind]],
;                           CONT [KEY arg2only_rel &
;                                     [ARG2 #sbjind]],
;			   ARG-S < #sbj >]].



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;VNs;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

vn-ditrans-hhon-lex := vn-ditrans-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].
vn-intrans-hhon-lex := vn-intrans-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].
vn-trans3-hhon-lex := vn-trans3-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].
vn-trans2-hhon-lex := vn-trans2-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].
; <type val="vn-trans1-hhon-lex">
; <name-ja>サ変ヲ他動詞尊敬
; <description>vn-trans1-lexを参照。このtypeは聞き手（読み手）に対する敬意を表す場合に使う。
; <ex>彼 が 理由 を 存知 する
; <nex>ご 存知 です か
; <todo>(TK 07-04-09)このtypeには「存知」のみが登録されているが、「存知」には本来honorification
; に関わる意味は含まれない。
; また、もし「ご存知」として使うのであれば、それは「存じる」の名詞化（vn化？）であり、「ご存じ」
; という表記が正しい。（間違えて「ご存知」と表記する場合もあるが」）
; </type>
vn-trans1-hhon-lex := vn-trans1-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

vn-ditrans-minus_shon-lex := vn-ditrans-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
								  VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
											CONT.HOOK.INDEX #2]],
							     CONT.HOOK.INDEX #3,
							     CTXT [BACKGROUND <! subj-honor_rel &
									       [HONORED #2,
										BEARER #3,
										POLARITY -] !>]]].


vn-intrans-minus_shon-lex  := vn-intrans-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                   VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans3-minus_shon-lex  := vn-trans3-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans2-minus_shon-lex  := vn-trans2-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans1-minus_shon-lex  := vn-trans1-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
vn-ditrans-hhon-minus_shon-lex := vn-ditrans-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-intrans-hhon-minus_shon-lex  := vn-intrans-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans3-hhon-minus_shon-lex  := vn-trans3-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans2-hhon-minus_shon-lex  := vn-trans2-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

vn-trans1-hhon-minus_shon-lex  := vn-trans1-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

vn-ditrans-shon-lex := vn-ditrans-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].


vn-intrans-shon-lex := vn-intrans-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans3-shon-lex := vn-trans3-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans2-shon-lex := vn-trans2-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans1-shon-lex := vn-trans1-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

vn-ditrans-hhon-shon-lex := vn-ditrans-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].


vn-intrans-hhon-shon-lex := vn-intrans-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans3-hhon-shon-lex := vn-trans3-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans2-hhon-shon-lex := vn-trans2-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

vn-trans1-hhon-shon-lex := vn-trans1-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

; <type val="vn-trans1-minusbar-lex">
; <name-ja>サ変ヲ他動詞化接尾辞
; <description>名詞（vn-lexを含む）の直後について、１つのvn-trans1-lexのような働きのものを作る接尾辞。
; しかし今のところ全く機能していない。このtypeが単独でtransitiveのvn-lexと同じ働きをしてしまっている。
; <ex>書類 を 電子 化 する
; <nex>回路 が 小型 化 する
; <todo>(TK 07-03-20)descriptionを参照。また、<nex>に挙げた例文を解析するために、vn-intrans-lex化させる
; typeも必要。
; </type>
vn-trans1-minusbar-lex := vn-trans1-lex &
			  [SYNSEM.LOCAL.BAR -].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; no honorification needs an empty background. so, I've inserted
;; the vn-trans1-super-lex types.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; <type val="vn-trans1-lex">
; <name-ja>サ変ヲ他動詞
; <description>主格（「が」格）と目的格（「を」）格を取るサ変動詞。Jacy Valenceのga-wo_transitive
; を参照(http://wiki.delph-in.net/moin/JacyValence)。名詞として働くことができる他、
; 後にlightverbを伴って動詞として働くことができる。日本語では一般的に他動詞と呼ばれる。
; <ex>スパイ が 暗号 を 解読 する
; <ex>解読 が 進む
; <nex>
; <todo>(TK 07-03-20)名詞単独でもそのまま目的格補語として取ってしまう。(lkb::do-parse-tty "犬 飼育 する")
; </type>
vn-trans1-lex := vn-trans1-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

; <type val="vn-trans2-lex">
; <name-ja>サ変ニ他動詞
; <description>主格（「が」格）と目的格（「に」）格を取るサ変動詞。Jacy Valenceのga-ni_transitive
; を参照(http://wiki.delph-in.net/moin/JacyValence)。名詞として働くことができる他、
; 後にlightverbを伴って動詞として働くことができる。日本語では一般的に自動詞と呼ばれる。
; <ex>社員 が サーバー に ログイン する
; <ex>ログイン が 出来 ない
; <nex>
; <todo>vn-trans1-lexを参照。
; </type>
vn-trans2-lex := vn-trans2-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].


; <type val="vn-trans3-lex">
; <name-ja>サ変ト必須他動詞
; <description>主格（「が」格）と目的格（「と」）格を取るサ変動詞。Jacy Valenceのga-to_transitive1
; を参照(http://wiki.delph-in.net/moin/JacyValence)。名詞として働くことができる他、
; 後にlightverbを伴って動詞として働くことができるが、このtypeは文中に「と」格にあたるものが無いと
; 出現しない。
; <ex>必ず 行く と 約束 する
; <nex>親 と 喧嘩 する
; <todo>
; </type>
vn-trans3-lex := vn-trans3-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

; <type val="vn-trans8-lex">
; <name-ja>サ変特殊ヲ他動詞
; <description>主格（「が」格）と目的格（「を」）格を取るサ変動詞という意味ではvn-trans1-super-lexと同じ。
; ただしこのtypeは「を」が現れていなくても名詞を目的格補語として取る。Jacy Valenceのsbj-narg_transitiveを参照
; (http://wiki.delph-in.net/moin/JacyValence)。
; <ex>チェック よろしく お願い し ます
; <nex>チェック を よろしく お願い し ます
; <todo>(TK 07-05-08)v-present-tense-end-lexを参照。
; </type>
vn-trans8-lex := vn-trans8-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

; <type val="vn-ditrans-lex">
; <name-ja>サ変二重目的他動詞
; <description>主格（「が」格）と２つの目的格（「を」格と「に」格）を取るサ変動詞。Jacy Valenceのditransitive
; を参照(http://wiki.delph-in.net/moin/JacyValence)。名詞として働くことができる他、
; 後にlightverbを伴って動詞として働くことができる。日本語では一般的に他動詞と呼ばれる。
; <ex>妻 が 探偵 に 調査 を 依頼 する
; <ex>依頼 を 断る
; <nex>
; <todo>(TK 07-03-22)「を」とこのtypeの間にある「に」が、必ずcaseになってしまうのは改善すべき
; (lkb::do-parse-tty "調査 を ３ 時 に 依頼 する")。v4-c-stem-lexも参照。
; </type>
vn-ditrans-lex := vn-ditrans-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

; <type val="vn-ditrans-toni-lex">
; <name-ja>ヲニト二重目的サ変他動詞
; <description>主格（「が」格）と２つの目的格（「を」格と「に」or「と」格）を取るサ変動詞。Jacy Valenceの
; ga-wo-toni-ditransitiveを参照(http://wiki.delph-in.net/moin/JacyValence)。
; 日本語では一般的に他動詞と呼ばれる。
; <ex>日本国 を 日 と 略 する
; <ex>日本国 の 略 は 日 だ
; <ex>日本国 を １ 文字 に 略 する
; <nex>
; <todo>vn-trans1-lexを参照。
; </type>
vn-ditrans-toni-lex := vn-ditrans-toni-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

; <type val="vn-intrans-lex">
; <name-ja>サ変自動詞
; <description>主格（「が」格）を取るサ変動詞。Jacy Valenceのditransitiveを参照
; (http://wiki.delph-in.net/moin/JacyValence)。名詞として働くことができる他、 後にlightverbを伴って動詞
; として働くことができる。日本語では一般的に自動詞と呼ばれる。
; <ex>両親 が 旅行 する
; <ex>旅行 が 楽しい
; <nex>
; <todo>
; </type>
vn-intrans-lex := vn-intrans-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].

;;; (TK 07-07-05)
;;; We didin't have "ga-to-ni_transitive1" , So I defined "vn-trans6-lex" .
;;; I used "vn-trans2-lex" & "v6-stem-lex" as reference.

vn-trans6-super-lex := vn-sbj-comps-lex &
            [SYNSEM [LOCAL.CAT.VAL ga-to-ni_transitive1 &
				   [COMPS.FIRST.LOCAL.CONT [HOOK.INDEX #objind],
				    SUBJ.FIRST.LOCAL.CONT [HOOK.INDEX #sbjind]],
		     LKEYS [KEYREL [ARG1 #sbjind,
				      ARG2 #objind]]]].


vn-trans6-hhon-lex := vn-trans6-super-lex & [SYNSEM.LOCAL.CAT.HEAD.FORMAL.AHON +].

vn-trans6-minus_shon-lex  := vn-trans6-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].


vn-trans6-hhon-minus_shon-lex  := vn-trans6-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON -,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON -,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY -] !>]]].


vn-trans6-shon-lex := vn-trans6-super-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].


vn-trans6-hhon-shon-lex := vn-trans6-hhon-lex & [SYNSEM.LOCAL [CAT [HEAD.FORMAL.SHON +,
                    VAL.SUBJ.FIRST.LOCAL [CAT.HEAD.FORMAL.SHON +,
                                           CONT.HOOK.INDEX #2]],
               CONT.HOOK.INDEX #3,
               CTXT [BACKGROUND <! subj-honor_rel &
                                   [HONORED #2,
                                    BEARER #3,
                                    POLARITY +] !>]]].

; <type val="vn-trans6-lex">
; <name-ja>サ変ニト他動詞
; <description>主格（「が」格）と目的格（「に」格or「と」格）を取るサ変動詞。
; Jacy Valenceのga-ni_transitiveを参照(http://wiki.delph-in.net/moin/JacyValence)。
; 名詞として働くことができる他、後にlightverbを伴って動詞として働くことができる。
; <ex>隕石 に 衝突 する
; <ex>隕石 と 衝突 する
; <nex>
; <todo>vn-trans1-lexを参照。
; </type>
vn-trans6-lex := vn-trans6-super-lex &
		 [SYNSEM.LOCAL.CTXT.BACKGROUND <! !>].


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;